# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.job_result_time import JobResultTime  # noqa: F401,E501
from swagger_server import util


class JobJobStatusDetails(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, progress_message: str=None, failure_message: str=None, time: JobResultTime=None):  # noqa: E501
        """JobJobStatusDetails - a model defined in Swagger

        :param name: The name of this JobJobStatusDetails.  # noqa: E501
        :type name: str
        :param progress_message: The progress_message of this JobJobStatusDetails.  # noqa: E501
        :type progress_message: str
        :param failure_message: The failure_message of this JobJobStatusDetails.  # noqa: E501
        :type failure_message: str
        :param time: The time of this JobJobStatusDetails.  # noqa: E501
        :type time: JobResultTime
        """
        self.swagger_types = {
            'name': str,
            'progress_message': str,
            'failure_message': str,
            'time': JobResultTime
        }

        self.attribute_map = {
            'name': 'name',
            'progress_message': 'progressMessage',
            'failure_message': 'failureMessage',
            'time': 'time'
        }
        self._name = name
        self._progress_message = progress_message
        self._failure_message = failure_message
        self._time = time

    @classmethod
    def from_dict(cls, dikt) -> 'JobJobStatusDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The job_job_status_details of this JobJobStatusDetails.  # noqa: E501
        :rtype: JobJobStatusDetails
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this JobJobStatusDetails.

        Name of job  # noqa: E501

        :return: The name of this JobJobStatusDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this JobJobStatusDetails.

        Name of job  # noqa: E501

        :param name: The name of this JobJobStatusDetails.
        :type name: str
        """

        self._name = name

    @property
    def progress_message(self) -> str:
        """Gets the progress_message of this JobJobStatusDetails.

        The current progress of the job  # noqa: E501

        :return: The progress_message of this JobJobStatusDetails.
        :rtype: str
        """
        return self._progress_message

    @progress_message.setter
    def progress_message(self, progress_message: str):
        """Sets the progress_message of this JobJobStatusDetails.

        The current progress of the job  # noqa: E501

        :param progress_message: The progress_message of this JobJobStatusDetails.
        :type progress_message: str
        """

        self._progress_message = progress_message

    @property
    def failure_message(self) -> str:
        """Gets the failure_message of this JobJobStatusDetails.

        If the job status is `failed`, this will contain the failure message.  # noqa: E501

        :return: The failure_message of this JobJobStatusDetails.
        :rtype: str
        """
        return self._failure_message

    @failure_message.setter
    def failure_message(self, failure_message: str):
        """Sets the failure_message of this JobJobStatusDetails.

        If the job status is `failed`, this will contain the failure message.  # noqa: E501

        :param failure_message: The failure_message of this JobJobStatusDetails.
        :type failure_message: str
        """

        self._failure_message = failure_message

    @property
    def time(self) -> JobResultTime:
        """Gets the time of this JobJobStatusDetails.


        :return: The time of this JobJobStatusDetails.
        :rtype: JobResultTime
        """
        return self._time

    @time.setter
    def time(self, time: JobResultTime):
        """Sets the time of this JobJobStatusDetails.


        :param time: The time of this JobJobStatusDetails.
        :type time: JobResultTime
        """

        self._time = time
